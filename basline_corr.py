import numpy as np
from scipy import sparse
from scipy.sparse.linalg import spsolve
from matplotlib import pyplot as plt


def baseline_als(y, lam, p, niter=10):
    L = len(y)
    D = sparse.diags([1, -2, 1], [0, -1, -2], shape=(L, L-2))
    w = np.ones(L)
    for i in range(niter):
        W = sparse.spdiags(w, 0, L, L)
        Z = W + lam * D.dot(D.transpose())
        z = spsolve(Z, w*y)
        w = p * (y > z) + (1-p) * (y < z)
    return z


if __name__ == "__main__":
    y = [2.56463467358409, 2.50675211718929, 2.47337845644094, 2.41484920816576, 2.36915388723583, 2.33866309169582,
         2.30160546708956, 2.23740858210989, 2.20786309136046, 2.17626350150955, 2.11675331611244, 2.07616599468282,
         2.02966789828772, 1.97299153124285, 1.96078431372549, 1.8835501875099, 1.86821291421887, 1.81778547995074,
         1.74868390936141, 1.6987651091565, 1.64503993755539, 1.56354111034816, 1.51430533302815, 1.45096343768809,
         1.44056066006169, 1.40444037537194, 1.36568245975433, 1.3371262902048, 1.38137745370522, 1.35783496277889,
         1.38421127205746, 1.35249430511504, 1.31848121868722, 1.2970168612192, 1.27832455939574, 1.24034049417432,
         1.21984980762733, 1.25298368374587, 1.28993231533859, 1.25651109400251]
    print(baseline_als(y, 1, 1e9))
    plt.plot(baseline_als(y, 1, 1e9))
    plt.plot(y)
    plt.show()
